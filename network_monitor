#!/bin/bash

# 企业微信机器人Webhook URL（请替换为您的实际URL）
WEBHOOK_URL="https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=YOUR_KEY"

# 自动检测活动网络接口
INTERFACE=$(ip route show default | awk '/default/ {print $5}' | head -n1)
[ -z "$INTERFACE" ] && INTERFACE="eth0"

# 流量统计文件路径（用于存储上次报告值）
STATS_FILE="/var/lib/network_total_$INTERFACE.txt"
[ -d "/var/lib" ] || STATS_FILE="/tmp/network_total_$INTERFACE.txt"

# 获取主机名
HOSTNAME=$(hostname)

# 字节格式化函数
format_bytes() {
    local bytes=$1
    if [ -z "$bytes" ] || [ "$bytes" -lt 0 ]; then
        echo "0B"
        return
    fi
    
    if [ $bytes -ge 1099511627776 ]; then
        printf "%.2fTB" $(echo "scale=4; $bytes / 1099511627776" | bc)
    elif [ $bytes -ge 1073741824 ]; then
        printf "%.2fGB" $(echo "scale=4; $bytes / 1073741824" | bc)
    elif [ $bytes -ge 1048576 ]; then
        printf "%.2fMB" $(echo "scale=4; $bytes / 1048576" | bc)
    elif [ $bytes -ge 1024 ]; then
        printf "%.2fKB" $(echo "scale=4; $bytes / 1024" | bc)
    else
        printf "%dB" $bytes
    fi
}

# 获取当前流量统计
get_current_stats() {
    # 从/proc/net/dev提取指定接口的流量数据
    awk -v interface="$INTERFACE" 'BEGIN {IGNORECASE=1} 
    $0 ~ interface ":" {
        gsub(/:/, "", $1);
        print $2, $10
    }' /proc/net/dev
}

# 主执行流程
if ! ip link show $INTERFACE &> /dev/null; then
    echo "错误：网络接口 $INTERFACE 不存在！"
    exit 1
fi

# 获取当前累计流量
read current_rx current_tx <<< $(get_current_stats)

# 确保获取到有效数据
if [ -z "$current_rx" ] || [ -z "$current_tx" ]; then
    echo "错误：无法获取接口 $INTERFACE 的流量数据"
    exit 1
fi

# 获取上次记录的流量值
if [ ! -f "$STATS_FILE" ]; then
    # 首次运行，初始化记录文件
    last_rx=$current_rx
    last_tx=$current_tx
    echo "$current_rx $current_tx" > "$STATS_FILE"
    echo "首次运行，初始化数据..."
else
    read last_rx last_tx < "$STATS_FILE"
fi

# 计算新增流量（处理计数器重置情况）
calculate_diff() {
    local current=$1
    local last=$2
    
    # 如果当前值小于上次值，可能是计数器重置（系统重启）
    if [ $current -lt $last ]; then
        # 返回当前值（从0开始）
        echo $current
    else
        # 正常情况：返回差值
        echo $((current - last))
    fi
}

# 计算新增流量
rx_diff=$(calculate_diff $current_rx $last_rx)
tx_diff=$(calculate_diff $current_tx $last_tx)

# 格式化流量值
rx_total=$(format_bytes $current_rx)
tx_total=$(format_bytes $current_tx)
rx_diff_formatted=$(format_bytes $rx_diff)
tx_diff_formatted=$(format_bytes $tx_diff)

# 获取系统启动时间
uptime_seconds=$(awk '{print $1}' /proc/uptime | cut -d. -f1)
uptime_days=$((uptime_seconds / 86400))
uptime_hours=$(( (uptime_seconds % 86400) / 3600 ))
uptime_minutes=$(( (uptime_seconds % 3600) / 60 ))

# 发送消息到企业微信
JSON_MSG=$(cat <<EOF
{
    "msgtype": "markdown",
    "markdown": {
        "content": "**累计流量监控报告**\n
        >**主机名**: <font color=\"info\">$HOSTNAME</font>\n
        >**接口**: <font color=\"info\">$INTERFACE</font>\n
        >**系统运行**: ${uptime_days}天${uptime_hours}小时${uptime_minutes}分\n
        >**入站总量**: <font color=\"warning\">$rx_total</font>\n
        >**出站总量**: <font color=\"warning\">$tx_total</font>\n
        >**上次报告后新增**: \n
        >　入站: <font color=\"comment\">$rx_diff_formatted</font>\n
        >　出站: <font color=\"comment\">$tx_diff_formatted</font>\n
        >**时间**: `date '+%Y-%m-%d %H:%M:%S'`\n"
    }
}
EOF
)

# 发送请求
curl -s -H "Content-Type: application/json" \
-d "$JSON_MSG" \
"$WEBHOOK_URL" > /dev/null

# 更新统计文件
echo "$current_rx $current_tx" > "$STATS_FILE"

echo "累计流量报告已发送"
echo "入站总量: $rx_total, 出站总量: $tx_total"
echo "新增入站: $rx_diff_formatted, 新增出站: $tx_diff_formatted"
